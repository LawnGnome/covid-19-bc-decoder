{"version":3,"sources":["ListItem.tsx","Decoder.tsx","Patient.tsx","Immunisation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ListItem","label","value","undefined","Decoder","code","startsWith","substr","raw","acc","enc","c","pair","parseInt","String","fromCharCode","decodeNumericalCode","payload","jws","decode","JSON","parse","pako","inflateRaw","Buffer","from","split","to","maybeBundle","R4","RTTI_Bundle","vc","credentialSubject","fhirBundle","_tag","left","patient","bundle","right","entry","Error","immunisations","resource","resourceType","push","length","map","imm","immunisation","e","Patient","name","family","given","join","birthDate","decodeVaccineCodes","coding","system","Immunisation","occurrenceDateTime","vaccineCode","lotNumber","AppState","App","useState","setCode","SCANNING","state","setState","onQrCode","useCallback","RESULTS","onReset","useLayoutEffect","document","documentElement","style","setProperty","window","innerHeight","id","onClick","icon","faCamera","ABOUT","className","target","rel","href","faGithub","onResult","result","getText","constraints","facingMode","videoStyle","height","width","top","display","overflow","position","videoContainerStyle","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f152e48c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport interface Props {\n  label: string;\n  value?: string;\n}\n\nconst ListItem: React.FunctionComponent<Props> = ({ label, value }) => {\n  return (\n    <>\n      {value !== undefined && (\n        <>\n          <dt>{label}</dt>\n          <dd>{value}</dd>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ListItem;\n","import React from \"react\";\n\nimport jws from \"jws\";\nimport pako from \"pako\";\nimport { R4 } from \"@ahryman40k/ts-fhir-types\";\nimport Patient from \"./Patient\";\nimport Immunisation from \"./Immunisation\";\n\nconst decodeNumericalCode = (code: string) => {\n  let acc: string | undefined = undefined;\n  let enc = \"\";\n  for (const c of code) {\n    if (acc === undefined) {\n      acc = c;\n    } else {\n      const pair = parseInt(`${acc}${c}`) + 45;\n      enc += String.fromCharCode(pair);\n\n      acc = undefined;\n    }\n  }\n\n  return enc;\n};\n\nexport interface Props {\n  code: string;\n}\n\nconst Decoder: React.FunctionComponent<Props> = ({ code }) => {\n  if (code.startsWith(\"shc:/\")) code = code.substr(5);\n  const raw = decodeNumericalCode(code);\n\n  // We can decode the signature using jws.\n  const sig = jws.decode(raw);\n\n  // Unfortunately, the jws library doesn't handle binary payloads properly, so\n  // we'll just decode it by hand.\n  const payload = JSON.parse(\n    pako.inflateRaw(Buffer.from(raw.split(\".\")[1], \"base64\"), {\n      to: \"string\",\n    })\n  );\n\n  try {\n    const maybeBundle = R4.RTTI_Bundle.decode(\n      payload.vc.credentialSubject.fhirBundle\n    );\n    if (maybeBundle._tag !== \"Right\") {\n      throw maybeBundle.left;\n    }\n    const bundle = maybeBundle.right;\n\n    if (bundle.entry === undefined) {\n      throw new Error(\"no entries found in bundle\");\n    }\n\n    let patient: R4.IPatient | undefined;\n    let immunisations: R4.IImmunization[] = [];\n    for (const entry of bundle.entry) {\n      const resource = entry.resource;\n      if (resource?.resourceType === \"Patient\") {\n        patient = resource;\n      } else if (resource?.resourceType === \"Immunization\") {\n        immunisations.push(resource);\n      }\n    }\n\n    return (\n      <>\n        {patient && <Patient patient={patient} />}\n        {immunisations.length > 0 && (\n          <>\n            <h2>Immunisations</h2>\n            {immunisations.map((imm) => (\n              <Immunisation immunisation={imm} />\n            ))}\n          </>\n        )}\n      </>\n    );\n  } catch (e) {\n    return (\n      <div>\n        The QR code had an unexpected structure, and could not be parsed. Try\n        scanning another one?\n      </div>\n    );\n  }\n};\n\nexport default Decoder;\n","import React from \"react\";\n\nimport { R4 } from \"@ahryman40k/ts-fhir-types\";\nimport ListItem from \"./ListItem\";\n\nexport interface Props {\n  patient: R4.IPatient;\n}\n\nconst Patient: React.FunctionComponent<Props> = ({ patient }) => {\n  return (\n    <>\n      <h2>Personal information</h2>\n      <dl>\n        {patient.name?.map((name) => {\n          return (\n            <>\n              <ListItem label=\"Family name\" value={name.family} />\n              <ListItem\n                label=\"Given names\"\n                value={\n                  name.given && name.given.length > 0\n                    ? name.given.join(\" \")\n                    : undefined\n                }\n              />\n            </>\n          );\n        })}\n        <ListItem label=\"Date of birth\" value={patient.birthDate} />\n      </dl>\n    </>\n  );\n};\n\nexport default Patient;\n","import React from \"react\";\n\nimport { R4 } from \"@ahryman40k/ts-fhir-types\";\nimport ListItem from \"./ListItem\";\n\nconst decodeVaccineCodes = (coding?: R4.ICoding[]) => {\n  if (coding) {\n    for (const code of coding) {\n      if (code.system === \"http://hl7.org/fhir/sid/cvx\") {\n        switch (code.code) {\n          case \"510\":\n            return \"Sinopharm\";\n          case \"511\":\n            return \"Sinovac\";\n          case \"502\":\n            return \"COVAXIN\";\n          case \"501\":\n            return \"QAZCOVID-IN\";\n          case \"503\":\n            return \"COVIVAC\";\n          case \"500\":\n            return \"Unknown COVID-19 vaccine\";\n          case \"507\":\n            return \"Anhui Zhifei Longcom Biopharm\";\n          case \"509\":\n            return \"EpiVacCorona\";\n          case \"508\":\n            return \"Jiangsu\";\n          case \"211\":\n            return \"Novavax\";\n          case \"212\":\n            return \"Janssen\";\n          case \"210\":\n            return \"AstraZeneca\";\n          case \"506\":\n            return \"CanSino\";\n          case \"504\":\n            return \"Sputnik Light\";\n          case \"505\":\n            return \"Sputnik V\";\n          case \"207\":\n            return \"Moderna\";\n          case \"208\":\n            return \"Pfizer\";\n        }\n      }\n    }\n  }\n};\n\nexport interface Props {\n  immunisation: R4.IImmunization;\n}\n\nconst Immunisation: React.FunctionComponent<Props> = ({ immunisation }) => {\n  return (\n    <dl>\n      <ListItem label=\"Date\" value={immunisation.occurrenceDateTime} />\n      <ListItem\n        label=\"Type\"\n        value={decodeVaccineCodes(immunisation.vaccineCode.coding)}\n      />\n      <ListItem label=\"Lot number\" value={immunisation.lotNumber} />\n    </dl>\n  );\n};\n\nexport default Immunisation;\n","import React, { useCallback, useLayoutEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport { QrReader } from \"@blackbox-vision/react-qr-reader\";\nimport Decoder from \"./Decoder\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { faCamera } from \"@fortawesome/free-solid-svg-icons\";\n\nenum AppState {\n  SCANNING,\n  RESULTS,\n  ABOUT,\n}\n\nfunction App() {\n  const [code, setCode] = useState<string | undefined>(undefined);\n  const [state, setState] = useState(AppState.SCANNING);\n\n  const onQrCode = useCallback((code: string | undefined) => {\n    if (code) {\n      setCode(code);\n      setState(AppState.RESULTS);\n    }\n  }, []);\n\n  const onReset = useCallback(() => {\n    setCode(undefined);\n    setState(AppState.SCANNING);\n  }, []);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty(\n      \"--vh\",\n      `${window.innerHeight}px`\n    );\n  });\n\n  return (\n    <>\n      <div id=\"nav\">\n        <nav>\n          {state !== AppState.SCANNING && (\n            <button onClick={onReset}>\n              <FontAwesomeIcon icon={faCamera} />\n            </button>\n          )}\n          <div id=\"spacer\"></div>\n          {state !== AppState.ABOUT && (\n            <button className=\"about\" onClick={() => setState(AppState.ABOUT)}>\n              About\n            </button>\n          )}\n          <a\n            id=\"github\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href=\"https://github.com/LawnGnome/covid-19-bc-decoder\"\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n        </nav>\n      </div>\n      {state === AppState.ABOUT && (\n        <div className=\"content\">\n          <h2>About this site</h2>\n          <p>\n            This is a very quick and dirty site to decode and display the\n            information encoded in a BC Vaccine Card QR code.\n          </p>\n          <p>\n            Your QR code and health information are not transmitted anywhere.\n          </p>\n          <p>\n            The source code for this site is hosted{\" \"}\n            <a href=\"https://github.com/LawnGnome/covid-19-bc-decoder\">\n              on GitHub\n            </a>\n            . Bug reports are welcome.\n          </p>\n          <p>\n            If you want to contact the author, ping{\" \"}\n            <a href=\"https://twitter.com/LGnome\">@LGnome</a> on Twitter.\n          </p>\n        </div>\n      )}\n      {state === AppState.SCANNING && (\n        <div id=\"scanner\">\n          <QrReader\n            onResult={(result) => onQrCode(result?.getText())}\n            constraints={{ facingMode: \"environment\" }}\n            videoStyle={{\n              height: null,\n              width: null,\n              top: null,\n              left: null,\n              display: null,\n              overflow: null,\n              position: null,\n            }}\n            videoContainerStyle={{\n              height: null,\n              width: null,\n              position: null,\n              paddingTop: null,\n              overflow: null,\n            }}\n          />\n        </div>\n      )}\n      {state === AppState.RESULTS && code && (\n        <div id=\"results\" className=\"content\">\n          <Decoder code={code} />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}